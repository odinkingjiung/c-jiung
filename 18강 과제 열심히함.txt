**C# 강의 5주차 과제**

# <강의 17화>

이 강의에서는 사용자 정의 자료형인 class를 포함해 struct와 enum의 개념을 설명합니다.
다음 강의 18화에서 종종 언급되는 만큼 꼭 영상을 보며 이해해보시길 바랍니다.
이 내용에 대한 문제를 제작하는 과정에서 개념의 혼돈을 발생시킬 가능성이 있었기에 오해의 가능성을 줄이고자 따로 과제를 내지는 않았습니다.
그러나 상당히 중요한 내용이고 이해하기 어렵다고 느껴질 수 있으므로 여러번 시청하는 것을 추천합니다.

# <강의 18 ~ 19화>

다음은 강의에서 작성한 TextRPG입니다.
강의를 시청하며 다음 코드를 실행시켜보세요.
그리고 각 부분이 어떤 역할을 하는지와 실행 순서를 주석으로 달아보세요.
(주석은 //를 사용해 작성하세요.)


```csharp  
class Player
{
    int AT = 10;
    int HP = 50;
    int MAXHP = 100;

    public void PrintHp()
    {
        Console.WriteLine("");
        Console.Write("현재 플레이어의 HP는 ");
        Console.Write(HP);
        Console.WriteLine("입니다.");
        Console.ReadKey();
    }
    public void MaxHeal()
    {
        if (HP >= MAXHP)
        {
            Console.WriteLine("");
            Console.WriteLine("체력이 모두 회복되어있어 회복할 필요가 없습니다.");
            Console.ReadKey();
        }
        else
        {
            HP = MAXHP;
            PrintHp();
        }
        return;
    }

    public void StatusRender()
    {
        Console.WriteLine("-------------------------------------------------");
        Console.Write("공격력 : ");
        Console.WriteLine(AT);

        Console.Write("체력 : ");
        Console.Write(HP);
        Console.Write("/");
        Console.WriteLine(MAXHP);
        Console.WriteLine("-------------------------------------------------");


    }
}
class Monster
{

}

enum STARTSELECT
{
    SELECTTOWN,
    SELECTBATTLE,
    NONSELECT,
}


internal class Program
{                      //시작한다
                         //마을로갈지 사냥터로 갈지 정해줌
    static STARTSELECT StartSelect()
    {


        Console.Clear();
        Console.WriteLine("1. 마을");
        Console.WriteLine("2. 배틀");
        Console.WriteLine("어디로 가시겠습니까?");

        ConsoleKeyInfo CKI = Console.ReadKey();

        Console.WriteLine("");

        switch (CKI.Key)
        {
            case ConsoleKey.D1:
                Console.WriteLine("마을로 이동합니다.");
                Console.ReadKey();
                            //리턴이란 구문은 리턴이 되는 순간 함수를 완전히 종료. 리턴 한번하면 그아래 아무리 코드 많아도 사용 x
                return STARTSELECT.SELECTTOWN;
            case ConsoleKey.D2:
                Console.WriteLine("배틀을 시작합니다.");
                Console.ReadKey();
                return STARTSELECT.SELECTBATTLE;
            default:
                Console.WriteLine("잘못된 선택입니다.");
                Console.ReadKey();
                  //에러나 잘못된 선택에 관한 것
                return STARTSELECT.NONSELECT;
        }

    }

    static void Town(Player _Player)
    {
        while (true)
        {
            Console.Clear();
            _Player.StatusRender();
            Console.WriteLine("마을에서 무슨 일을 하시겠습니까?");
            Console.WriteLine("1. 체력을 회복한다.");
            Console.WriteLine("2. 무기를 강화한다.");
            Console.WriteLine("3. 마을을 나간다.");
                          //ConsoleKey CK = Console,ReadKey() . Key :
            switch (Console.ReadKey().Key)
            {
                case ConsoleKey.D1:
                    _Player.MaxHeal();
                    break;
                case ConsoleKey.D2:
                    break;
                case ConsoleKey.D3:
                    return;
            }
        }
    }

    static void Battle()
    {
        Console.WriteLine("");
        Console.WriteLine("아직 개장하지 않았습니다.");
        Console.ReadKey();
    }

    private static void Main(string[] args)
    {

        Player NewPlayer = new Player();


        while (true)
        {

            STARTSELECT SelectCheck = StartSelect();

            switch (SelectCheck)
            {
                case STARTSELECT.SELECTTOWN:
                    Town(NewPlayer);
                    break;
                case STARTSELECT.SELECTBATTLE:
                    Battle();
                    break;
            }
        }

    }
}
```


class Player
{
 //클래스 변수 선언하귀
    int AT = 10; // 공
    int HP = 50; // 체
    int MAXHP = 100; // 최 피

    // 현재 플레이어 체력 출력
    public void PrintHp()
    {
        Console.WriteLine("");
        Console.Write("현재 플레이어의 HP는 ");
        Console.Write(HP);
        Console.WriteLine("입니다.");
        Console.ReadKey();
    }

    // 체 맥스 회복 시키는 거
    public void MaxHeal()
    {
        if (HP >= MAXHP)
        {
            Console.WriteLine("");
            Console.WriteLine("체력이 모두 회복되어있어 회복할 필요가 없습니다.");
            Console.ReadKey();
        }
        else
        {
            HP = MAXHP;
            PrintHp();
        }
        return;
    }

    // 플레이어의 스탯 출력 시킴
    public void StatusRender()
    {
        Console.WriteLine("-------------------------------------------------");
        Console.Write("공격력 : ");
        Console.WriteLine(AT);

        Console.Write("체력 : ");
        Console.Write(HP);
        Console.Write("/");
        Console.WriteLine(MAXHP);
        Console.WriteLine("-------------------------------------------------");
    }
}

class Monster
{

}

enum STARTSELECT
{
    SELECTTOWN,
    SELECTBATTLE,
    NONSELECT,
}

internal class Program
{
                         //시작한다
                         //마을로갈지 사냥터로 갈지 정하
    static STARTSELECT StartSelect()
    {
        Console.Clear();
        Console.WriteLine("1. 마을");
        Console.WriteLine("2. 배틀");
        Console.WriteLine("어디로 가시겠습니까?");

        ConsoleKeyInfo CKI = Console.ReadKey();

        Console.WriteLine("");

        switch (CKI.Key)
        {
            case ConsoleKey.D1:
                Console.WriteLine("마을로 이동합니다.");
                Console.ReadKey();
                return STARTSELECT.SELECTTOWN;
            case ConsoleKey.D2:
                Console.WriteLine("배틀을 시작합니다.");
                Console.ReadKey();
                return STARTSELECT.SELECTBATTLE;
            default:
                Console.WriteLine("잘못된 선택입니다.");
                Console.ReadKey();
                return STARTSELECT.NONSELECT;
        }
    }

    // 마을에서 할 수 있는 기능들 보여주는 거
    static void Town(Player _Player)
    {
        while (true)
        {
            Console.Clear();
            _Player.StatusRender();
            Console.WriteLine("마을에서 무슨 일을 하시겠습니까?");
            Console.WriteLine("1. 체력을 회복한다.");
            Console.WriteLine("2. 무기를 강화한다.");
            Console.WriteLine("3. 마을을 나간다.");
            
            switch (Console.ReadKey().Key)
            {
                case ConsoleKey.D1:
                    _Player.MaxHeal();
                    break;
                case ConsoleKey.D2:
                    break;
                case ConsoleKey.D3:
                    return;
            }
        }
    }

    // 바토루를 시작하는 코드
    static void Battle()
    {
        Console.WriteLine("");
        Console.WriteLine("아직 개장하지 않았습니다.");
        Console.ReadKey();
    }

    // 메인
    private static void Main(string[] args)
    {
        Player NewPlayer = new Player();   

        while (true)   
        {
            STARTSELECT SelectCheck = StartSelect();  

            switch (SelectCheck)
            {
                case STARTSELECT.SELECTTOWN:
                    Town(NewPlayer);
                    break;
                case STARTSELECT.SELECTBATTLE:
                    Battle();
                    break;
            }
        }
    }
}
실행 순서는 따로 빼서 적었읍니다. 
Main 실행 시작해주고 

새로운 플레이어 객체 만들고 (Player NewPlayer = new Player();) 

겜 스타트 표시 (STARTSELECT SelectCheck = StartSelect();)

선택 따라서이 실행할 기능 결정 (switch 로)
                       마을 선택: Town 이세계 소환 (Town(NewPlayer);)
                                            플레이어 스탯 출력하기 (_Player.StatusRender();)
                                            사용자 선택 따라서 마을에서 할 일 정하기 (switch )
                                            체력 회복 선택: 체력 회복 코드 호출 (_Player.MaxHeal();)
                                            마을에서 나가기 선택: 마을 나가기
                       배틀 선택: Battle (남은 얘기는 서에 가서 하시죠 시전) 호출  (Battle();)
                                             아직 배틀 기능은 구현도 안된 레전드 게임.  그래서  "아직 개장하지 않았습니다." 출력
선택된 기능 실행 후 다시 게임 시작 메뉴로 돌아감 (while (true) 로 반복 때리기)